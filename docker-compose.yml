version: '3.8'

services:
  backend-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_NAME=backend-gateway
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - micro-authen
      - micro-file
      - micro-reports
      - micro-cluster
      - micro-license
      - micro-notification
      - micro-tenant

  micro-authen:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-authen
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules

  micro-file:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-file
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules

  micro-reports:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-reports
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules

  micro-cluster:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-cluster
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules

  micro-license:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-license
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules

  micro-notification:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-notification
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules

  micro-tenant:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_NAME=micro-tenant
    environment:
      - NODE_ENV=development
    volumes:
      - .:/app
      - /app/node_modules

  # Database
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=carmen
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  # postgres_data:
  redis_data: 